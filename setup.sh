cat > /opt/mediawiki/update-setup.sh << 'EOF'
#!/bin/bash
# Script to update MediaWiki setup to use a single shared database

echo "=== Updating MediaWiki Setup with Shared Database ==="

# Backup current configurations
echo "Creating backups of current configuration..."
mkdir -p /opt/mediawiki/backups/$(date +%Y%m%d)
cp /opt/mediawiki/docker-compose.yml /opt/mediawiki/backups/$(date +%Y%m%d)/
cp /opt/mediawiki/LocalSettings.php /opt/mediawiki/backups/$(date +%Y%m%d)/
cp /opt/mediawiki/private/docker-compose.yml /opt/mediawiki/backups/$(date +%Y%m%d)/private-docker-compose.yml
cp /opt/mediawiki/private/LocalSettings.php /opt/mediawiki/backups/$(date +%Y%m%d)/private-LocalSettings.php

# Stop existing containers
echo "Stopping existing containers..."
cd /opt/mediawiki
docker compose down
cd /opt/mediawiki/private
docker compose down

# Create mediawiki_fresh database if it doesn't exist
echo "Creating mediawiki_fresh database..."
docker exec mariadb mysql -u pawneemayor -p"password321" -e "CREATE DATABASE IF NOT EXISTS mediawiki_fresh;"

# Create directory structure for both wikis
echo "Creating directory structure..."
# Main wiki directories
mkdir -p /opt/mediawiki/images/resources/sources
mkdir -p /opt/mediawiki/cache
mkdir -p /opt/mediawiki/extensions
mkdir -p /opt/mediawiki/skins
mkdir -p /opt/mediawiki/config

# Private wiki directories
mkdir -p /opt/mediawiki/private/resources/resources
mkdir -p /opt/mediawiki/private/cache
mkdir -p /opt/mediawiki/private/extensions
mkdir -p /opt/mediawiki/private/skins
mkdir -p /opt/mediawiki/private/config

# Update docker-compose.yml for main wiki
echo "Updating docker-compose.yml for main wiki..."
cat > /opt/mediawiki/docker-compose.yml << 'EOC'
version: "3.8"
services:
  adnd2e:
    image: mediawiki:latest
    container_name: adnd2e
    hostname: adnd2e
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - MEDIAWIKI_DB_TYPE=mysql
      - MEDIAWIKI_DB_HOST=mariadb
      - MEDIAWIKI_DB_NAME=mediawiki_fresh
      - MEDIAWIKI_DB_USER=pawneemayor
      - MEDIAWIKI_DB_PASSWORD=password321
      - MEDIAWIKI_SITE_NAME=AD&D 2E Wiki
    volumes:
      - /opt/mediawiki/images:/var/www/html/images
      - /opt/mediawiki/cache:/var/www/html/cache
      - /opt/mediawiki/extensions:/var/www/html/extensions
      - /opt/mediawiki/skins:/var/www/html/skins
      - /opt/mediawiki/config:/var/www/html/config
      - /etc/localtime:/etc/localtime:ro
      - /opt/mediawiki/apache-config.conf:/etc/apache2/conf-enabled/servername.conf
    networks:
      - saltbox
    labels:
      com.github.saltbox.saltbox_managed: true
      traefik.enable: true
      traefik.http.routers.adnd2e-http.entrypoints: web
      traefik.http.routers.adnd2e-http.middlewares: globalHeaders@file,redirect-to-https@docker,robotHeaders@file,cloudflarewarp@docker
      traefik.http.routers.adnd2e-http.rule: Host(`adnd2e.mayorgergich.xyz`)
      traefik.http.routers.adnd2e-http.service: adnd2e
      traefik.http.routers.adnd2e.entrypoints: websecure
      traefik.http.routers.adnd2e.middlewares: globalHeaders@file,secureHeaders@file,robotHeaders@file,cloudflarewarp@docker
      traefik.http.routers.adnd2e.rule: Host(`adnd2e.mayorgergich.xyz`)
      traefik.http.routers.adnd2e.service: adnd2e
      traefik.http.routers.adnd2e.tls.certresolver: cfdns
      traefik.http.routers.adnd2e.tls.options: securetls@file
      traefik.http.services.adnd2e.loadbalancer.server.port: 80

networks:
  saltbox:
    external: true
EOC

# Update LocalSettings.php for main wiki
echo "Updating LocalSettings.php for main wiki..."
cat > /opt/mediawiki/LocalSettings.php << 'EOL'
<?php
# This file was automatically generated by the MediaWiki 1.43.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "ADND2e";
$wgMetaNamespace = "AD&D2e";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://adnd2e.mayorgergich.xyz";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/images/resources/sources/favicon.ico",
	'icon' => "$wgResourceBasePath/images/resources/sources/logo.png",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "";
$wgPasswordSender = "";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "mariadb";
$wgDBname = "mediawiki_fresh";
$wgDBuser = "pawneemayor";
$wgDBpassword = "password321";

# MySQL specific settings
$wgDBprefix = "adnd2e_"; # Added prefix for separation
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "2bb341eaf6836414e801e978a37eb6db4ec92b531fec7d7758ee27fe15424f6e";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "65ad112463df7681";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector-2022";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MinervaNeue' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

# End of automatically generated settings.
# Add more configuration options below.

# Performance settings
$wgParserCacheType = CACHE_ACCEL;
$wgMessageCacheType = CACHE_ACCEL;
$wgResourceLoaderMaxage['versioned'] = 60 * 60 * 24 * 30;
$wgResourceLoaderMaxage['unversioned'] = 60 * 60 * 24;
$wgUseGzip = true;
ini_set('memory_limit', '256M');
ini_set('max_execution_time', 120);

# Debug settings - only enable when needed
$wgShowExceptionDetails = true;
$wgShowDBErrorBacktrace = true;
$wgShowSQLErrors = true;
EOL

# Update docker-compose.yml for private wiki
echo "Updating docker-compose.yml for private wiki..."
cat > /opt/mediawiki/private/docker-compose.yml << 'EOP'
version: "3.8"
services:
  adnd2e-private:
    image: mediawiki:latest
    container_name: adnd2e-private
    hostname: adnd2e-private
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - MEDIAWIKI_DB_TYPE=mysql
      - MEDIAWIKI_DB_HOST=mariadb
      - MEDIAWIKI_DB_NAME=mediawiki_private
      - MEDIAWIKI_DB_USER=pawneemayor
      - MEDIAWIKI_DB_PASSWORD=password321
      - MEDIAWIKI_SITE_NAME=AD&D 2E Private Wiki
    volumes:
      - /opt/mediawiki/private/resources:/var/www/html/images
      - /opt/mediawiki/private/cache:/var/www/html/cache
      - /opt/mediawiki/private/extensions:/var/www/html/extensions
      - /opt/mediawiki/private/skins:/var/www/html/skins
      - /opt/mediawiki/private/config:/var/www/html/config
      - /etc/localtime:/etc/localtime:ro
      - /opt/mediawiki/private/apache-config.conf:/etc/apache2/conf-enabled/servername.conf
    networks:
      - saltbox
    labels:
      com.github.saltbox.saltbox_managed: true
      traefik.enable: true
      traefik.http.routers.adnd2e-private-http.entrypoints: web
      traefik.http.routers.adnd2e-private-http.middlewares: globalHeaders@file,redirect-to-https@docker,robotHeaders@file,cloudflarewarp@docker
      traefik.http.routers.adnd2e-private-http.rule: Host(`adnd2e-private.mayorgergich.xyz`)
      traefik.http.routers.adnd2e-private-http.service: adnd2e-private
      traefik.http.routers.adnd2e-private.entrypoints: websecure
      traefik.http.routers.adnd2e-private.middlewares: globalHeaders@file,secureHeaders@file,robotHeaders@file,cloudflarewarp@docker
      traefik.http.routers.adnd2e-private.rule: Host(`adnd2e-private.mayorgergich.xyz`)
      traefik.http.routers.adnd2e-private.service: adnd2e-private
      traefik.http.routers.adnd2e-private.tls.certresolver: cfdns
      traefik.http.routers.adnd2e-private.tls.options: securetls@file
      traefik.http.services.adnd2e-private.loadbalancer.server.port: 80

networks:
  saltbox:
    external: true
EOP

# Update LocalSettings.php for private wiki
echo "Updating LocalSettings.php for private wiki..."
cat > /opt/mediawiki/private/LocalSettings.php << 'EOL2'
<?php
# This file was automatically generated by the MediaWiki 1.43.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "ADND2e-Private";
$wgMetaNamespace = "AD&D2e-Private";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "https://adnd2e-private.mayorgergich.xyz";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [
	'1x' => "$wgResourceBasePath/images/resources/logo.png",
	'icon' => "$wgResourceBasePath/images/resources/favicon.ico",
];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "";
$wgPasswordSender = "";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "mariadb";
$wgDBname = "mediawiki_private";
$wgDBuser = "pawneemayor";
$wgDBpassword = "password321";

# MySQL specific settings
$wgDBprefix = "adnd2e_private_"; # Added prefix for separation
$wgDBssl = false;

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "7e6cb22121b0b449feef4cd37f702b7e37abafc8dd6c9d42da5688b0d67d63b2";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "2911a24ff883c44812149c0415848c64";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector-2022";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MinervaNeue' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

# Performance settings
$wgParserCacheType = CACHE_ACCEL;
$wgMessageCacheType = CACHE_ACCEL;
$wgResourceLoaderMaxage['versioned'] = 60 * 60 * 24 * 30;
$wgResourceLoaderMaxage['unversioned'] = 60 * 60 * 24;
$wgUseGzip = true;
ini_set('memory_limit', '256M');
ini_set('max_execution_time', 120);

# Debug settings - only enable when needed
$wgShowExceptionDetails = true;
$wgShowDBErrorBacktrace = true;
$wgShowSQLErrors = true;
$wgDebugDumpSql = true;

# End of automatically generated settings.
# Add more configuration options below.
EOL2

# Create sample logo and favicon files
echo "Creating sample logo and favicon files..."
# Create a simple placeholder logo
cat > /opt/mediawiki/images/resources/sources/logo.png << 'EOI'
iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAB+ElEQVR4nO3dsU7CUBSA4ZPahCFx0EXaEF2Mo8/hG/kC+io+gLMrg6vRxVIICcMtHodW09CWFrz3lPN/G2nMvZz0pCmEUgAAAAAAAAAAAMCfVi37Rfr9/urwsFMrlbL18XiSLspF92tq9d6jdpeqznGu2k3rdnvJarXWr9V6L6oZ1cqLiJSqrU+TSasVj7N8/LzWVp6v9utpJFW9s9l0u+t04/FkUwqxxWKRxeP2bbnzaA9CfTefz3fqbjablMIWDIfD0s5Fuxb3vFEX50e5GsjmOlQKIYQwm05LO+paDxl4vboo7ayO3dMlXjeTjx/npZ3P3h68AQMEYoBADPj1+yHflctSt9v99lP42WwW5vNZuLm9y3wCv5bnebg8PwmnJ52w1zt+3R0cHIbLy4vQ6Ry9+7hpmobt7W3vkEK51A9Pz/G03/9Q9/CwE15eRtt+aB/i6enxXd3JyWnVx4UgD/X6TlXnh3/60wAEIBADBGKAQAwQiAECMUAgBgjEAIEYIBADBGKAQAwQiAECMUAgBgjEAIEYIBADBGKAQAwQiAECMUAgBgjEAIEYIBADBGKAQAwQiAECMUAgBgjEAIEYIBADBGKAQAwQiAECMUAgBgjEAIEYIBADBGKAQAwQiAECMUAgBgjEAIEYIBADBGKAQAwQiAECMUAgBgAAAAAAAAAA8K/8AEe5Zopd89RFAAAAAElFTkSuQmCC
EOI

# Create a simple placeholder favicon
cat > /opt/mediawiki/images/resources/sources/favicon.ico << 'EOF'
AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuYO8ALmPxAC5h8B4uYfCLLmHw0S5h8NMuYfCPLmHwIi5j8QAuYO8AAAAAAAAAAAAAAAAAAAAAACZw/wAnbv0AJ279BCdu/WYnbv3fJ279/ydu/f8nbv3/J279/ydu/eEnbv1qJ279BCdu/QAmbP8AAAAAAAAAAAAncP4AJ3D+ACdw/loncP7wJ3D+/ydw/v8ncP7/J3D+/ydw/v8ncP7/J3D+/ydw/vIncP5cJ3D+ACdw/gAAAAAAKXP/ACl0/wApdP9WKXT//yl0//8pdP//KXT//yl0//

# Copy logo and favicon to private wiki resources
cp /opt/mediawiki/images/resources/sources/logo.png /opt/mediawiki/private/resources/resources/
cp /opt/mediawiki/images/resources/sources/favicon.ico /opt/mediawiki/private/resources/resources/

# Start the MediaWiki containers
echo "Starting MediaWiki containers..."
cd /opt/mediawiki
docker compose up -d
cd /opt/mediawiki/private
docker compose up -d

# Wait for containers to be ready
echo "Waiting for containers to initialize..."
sleep 10

# Update LocalSettings.php files in containers
echo "Updating LocalSettings.php in containers..."
docker cp /opt/mediawiki/LocalSettings.php adnd2e:/var/www/html/
docker exec adnd2e chmod 644 /var/www/html/LocalSettings.php
docker exec adnd2e chown www-data:www-data /var/www/html/LocalSettings.php

docker cp /opt/mediawiki/private/LocalSettings.php adnd2e-private:/var/www/html/
docker exec adnd2e-private chmod 644 /var/www/html/LocalSettings.php
docker exec adnd2e-private chown www-data:www-data /var/www/html/LocalSettings.php

# Ensure proper permissions for all directories
echo "Setting permissions for all directories..."
# Main wiki permissions
docker exec adnd2e bash -c "mkdir -p /var/www/html/cache && chown -R www-data:www-data /var/www/html/cache"
docker exec adnd2e chown -R www-data:www-data /var/www/html/images
docker exec adnd2e chmod -R 755 /var/www/html/images
docker exec adnd2e bash -c "chmod -R 755 /var/www/html/extensions"
docker exec adnd2e bash -c "chmod -R 755 /var/www/html/skins"
docker exec adnd2e bash -c "chmod -R 755 /var/www/html/config"

# Private wiki permissions
docker exec adnd2e-private bash -c "mkdir -p /var/www/html/cache && chown -R www-data:www-data /var/www/html/cache"
docker exec adnd2e-private chown -R www-data:www-data /var/www/html/images
docker exec adnd2e-private chmod -R 755 /var/www/html/images
docker exec adnd2e-private bash -c "chmod -R 755 /var/www/html/extensions"
docker exec adnd2e-private bash -c "chmod -R 755 /var/www/html/skins"
docker exec adnd2e-private bash -c "chmod -R 755 /var/www/html/config"

# Run update script to ensure database structure is current
echo "Running update script for both wikis..."
docker exec -u www-data adnd2e php maintenance/update.php --quick
docker exec -u www-data adnd2e-private php maintenance/update.php --quick

# Restart containers
echo "Restarting containers to apply all changes..."
docker restart adnd2e
docker restart adnd2e-private

echo "=== Setup complete! ==="
echo "Your wikis should now be available at:"
echo "  * https://adnd2e.mayorgergich.xyz"
echo "  * https://adnd2e-private.mayorgergich.xyz"
echo ""
echo "Both wikis are now using the shared MariaDB container."
echo ""
echo "IMPORTANT: Remember that LocalSettings.php must be manually copied"
echo "into the containers after any changes:"
echo ""
echo "  docker cp /opt/mediawiki/LocalSettings.php adnd2e:/var/www/html/"
echo "  docker exec adnd2e chmod 644 /var/www/html/LocalSettings.php"
echo "  docker exec adnd2e chown www-data:www-data /var/www/html/LocalSettings.php"
echo ""
echo "  docker cp /opt/mediawiki/private/LocalSettings.php adnd2e-private:/var/www/html/"
echo "  docker exec adnd2e-private chmod 644 /var/www/html/LocalSettings.php"
echo "  docker exec adnd2e-private chown www-data:www-data /var/www/html/LocalSettings.php"
EOF

chmod +x /opt/mediawiki/update-setup.sh
